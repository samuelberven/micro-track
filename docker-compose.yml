services:
  db:
    image: mysql:8.4
    # image: mysql:latest
    container_name: mysql_db
    restart: always
    env_file:
      - .env # Load env variables from root .env file
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/01_schema.sql:/docker-entrypoint-initdb.d/01_schema.sql
      - ./db/02_seed_data.sql:/docker-entrypoint-initdb.d/02_seed_data.sql
    networks:
      - my_network
    # Adds healthcheck so the server image runs later. Note: Delete this if any issues arise.
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 3
      start_period: 20s

  # Experimental: incorporates ts-node and nodemon for hot reloading
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: backend-app
    ports:
      - "3000:3000"
    volumes:
      - ./server:/app
      - /app/node_modules
    env_file:
      - ./server/.env.server
    command: ["npm", "run", "dev"]
    depends_on:
      db:
        condition: service_healthy
    networks:
      - my_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: frontend-app
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - ./frontend/.env.frontend
    depends_on:
      - backend
    networks:
      - my_network
    command: ["npm", "run", "watch"]  # Changed to use nodemon
    environment:
      - WATCHPACK_POLLING=true  # Better file watching in Docker

volumes:
  mysql_data:

networks:
  my_network:
    driver: bridge
